name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # We download specific versions here. The versions themselves don't really matter, but since the aim here is to have tests for 0-stor,
    # instead of the full qsfs stack, we avoid using latest, as that could introduce test failure because the components used in the tests
    # change behavior.
    - name: Install 0-db
      run: sudo wget -O /usr/bin/zdb https://github.com/threefoldtech/0-db/releases/download/v2.0.4/zdb-2.0.4-linux-amd64-static
    - name: Install 0-db hook script
      run: wget -O hook.sh https://raw.githubusercontent.com/threefoldtech/quantum-storage/v0.1.0/lib/zdb-hook.sh
    - name: Install 0-db-fs
      run: sudo wget -O /usr/bin/zdbfs https://github.com/threefoldtech/0-db-fs/releases/download/v0.1.10/zdbfs-0.1.10-amd64-linux-static
    - name: Install wondershaper
      run: sudo wget -O wondershaper https://raw.githubusercontent.com/magnific0/wondershaper/master/wondershaper
    - name: Run tests
      run: sudo cargo test --verbose

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
